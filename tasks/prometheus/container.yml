---

- name: Create prometheus appdata directory
  ansible.builtin.file:
    path: '{{ lookup("vars", prowlarr_prefix + "_prometheus_paths_location") }}'
    state: directory
    owner: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_puid") }}'
    group: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_pgid") }}'
    mode: '0755'

- name: Create prometheus metrics data directory
  ansible.builtin.file:
    path: '{{ lookup("vars", prowlarr_prefix + "_prometheus_paths_data_location") }}'
    state: directory
    owner: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_puid") }}'
    group: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_pgid") }}'
    mode: '0755'

- name: Check if prometheus scrape config exists
  ansible.builtin.stat:
    path: '{{ lookup("vars", prowlarr_prefix + "_prometheus_paths_location") }}/prometheus.yml'
  register: prowlarr_prometheus_scrape_config

- name: Import prometheus scrape file
  when: not prowlarr_prometheus_scrape_config.stat.exists
  ansible.builtin.template:
    src: '{{ role_path }}/templates/prometheus.yml.j2'
    dest: '{{ lookup("vars", prowlarr_prefix + "_prometheus_paths_location") }}/prometheus.yml'
    force: true
    owner: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_puid") }}'
    group: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_pgid") }}'
    mode: '0664'
  notify:
    - restart prometheus

- name: Register prometheus network
  community.docker.docker_network_info:
    name: '{{ lookup("vars", prowlarr_prefix + "_prometheus_network") }}'
  register: prowlarr_prometheus_network_result

- name: Prometheus network builtin fail
  ansible.builtin.fail:
    msg: Prometheus network does not exist nor is it enabled. Ensure the Prometheus network variables contain valid entries.
  when:
    - not (lookup("vars", prowlarr_prefix + "_prometheus_network_is_enabled"))
    - not prowlarr_prometheus_network_result.exists

- name: Create prometheus network
  when: not prowlarr_prometheus_network_result.exists
  community.docker.docker_network:
    name: '{{ lookup("vars", prowlarr_prefix + "_prometheus_network") }}'
    driver: '{{ lookup("vars", prowlarr_prefix + "_prometheus_network_driver") }}'
    ipam_config:
      - subnet: '{{ lookup("vars", prowlarr_prefix + "_prometheus_network_subnet") }}'

- name: Register prometheus container
  community.docker.docker_container_info:
    name: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_name") }}'
  register: prowlarr_prometheus_container_result

- name: Create prometheus container
  when:
    - not prowlarr_prometheus_container_result.exists
    - not (lookup("vars", prowlarr_prefix + "_toggles_enable_traefik"))
  community.docker.docker_container:
    name: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_name") }}'
    image: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_image_repo") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_image_tag") }}'
    networks: '{{ lookup("vars", prowlarr_prefix + "_prometheus_networks") }}'
    command: '{{ lookup("vars", prowlarr_prefix + "_prometheus_commands") | reject("equalto", omit) | list }}'
    env:
      TZ: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_timezone") }}'
    ports:
      - '{{ lookup("vars", prowlarr_prefix + "_prometheus_ports_host") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_ports_cont") }}'
    user: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_puid") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_env_pgid") }}'
    volumes: '{{ lookup("vars", prowlarr_prefix + "_prometheus_volumes_binds") }}'
    restart_policy: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_restart_policy") }}'

- name: Create prometheus traefik container
  when:
    - not prowlarr_prometheus_container_result.exists
    - (lookup("vars", prowlarr_prefix + "_toggles_enable_traefik"))
  community.docker.docker_container:
    name: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_name") }}'
    image: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_image_repo") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_image_tag") }}'
    networks: '{{ lookup("vars", prowlarr_prefix + "_prometheus_networks") }}'
    command: '{{ lookup("vars", prowlarr_prefix + "_prometheus_commands") | reject("equalto", omit) | list }}'
    env:
      TZ: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_timezone") }}'
    labels: '{{ lookup("vars", prowlarr_prefix + "_prometheus_labels") }}'
    ports:
      - '{{ lookup("vars", prowlarr_prefix + "_prometheus_ports_host") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_ports_cont") }}'
    user: '{{ lookup("vars", prowlarr_prefix + "_prometheus_env_puid") }}:{{ lookup("vars", prowlarr_prefix + "_prometheus_env_pgid") }}'
    volumes: '{{ lookup("vars", prowlarr_prefix + "_prometheus_volumes_binds") }}'
    restart_policy: '{{ lookup("vars", prowlarr_prefix + "_prometheus_basics_restart_policy") }}'
